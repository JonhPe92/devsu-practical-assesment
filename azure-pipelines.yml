# Deploy to Devsu Demo App to AKS Cluster

trigger:
- main

resources:
- repo: self

pool:
  vmImage: 'ubuntu-latest'
variables: 
  tag: '$(Build.BuildId)'
  env: Production
  cluster: devsu-dev-aks-cluster-devsu-app   
  ImageName: 'jonhpe/devsu-app'
  containerRegistry: 'dockerhub'
stages:
- stage : buildnode
  displayName: "Build"
  jobs:
  - job: build
    displayName: "Build"
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.11.0'
      displayName: 'Install Node js'
    - script: |
        npm install
      displayName: 'npm install'
    - script: |
        npm test
      displayName: 'npm test'

#.................Second stage dockerizing app.........
- stage: buildandpush
  displayName: "Build and push docker"
  jobs:
  - job: BuildandPush
    displayName: Build and push Docker image
    steps:
    - task: Docker@2
      displayName: Login to Docker Hub
      inputs:
        command: login
        containerRegistry: '$(containerRegistry)'
        displayName: 'Login in docker hub'
    - task: Docker@2
      displayName: Build and Push
      inputs:
        command: buildAndPush
        Dockerfile: './Dockerfile'
        repository: '$(ImageName)'
        tags: |
         $(tag)

- stage: Deploy
  displayName: "Deploy"
  dependsOn: buildandpush
  jobs:
  - deployment: prodDeploy
    displayName: Deploy
    environment: $(env)   #configured an approval in this enviroment
    strategy:
      runOnce:
        deploy: 
          steps:
          - checkout: self
          - task: KubernetesManifest@0
            displayName: Deplot to Kubernetes cluster
            inputs:
              action: deploy
              kubernetesServiceConnection: $(cluster)
              namespace: default
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yaml
                $(Pipeline.Workspace)/manifests/service.yaml
                $(Pipeline.Workspace)/manifests/ingress.yaml
              containers: |
                $(ImageName):$(tag)


